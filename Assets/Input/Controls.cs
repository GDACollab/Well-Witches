//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.11.2
//     from Assets/Input/Controls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Controls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Controls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Controls"",
    ""maps"": [
        {
            ""name"": ""Gameplay"",
            ""id"": ""d4902dec-a812-4723-b645-cf4f4840c02c"",
            ""actions"": [
                {
                    ""name"": ""Gatherer_Move"",
                    ""type"": ""Value"",
                    ""id"": ""1048bd76-5a7f-48dc-8848-2e9d1ada3a51"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Gatherer_ActiveAbility"",
                    ""type"": ""Button"",
                    ""id"": ""4b63c30e-5073-4ad7-8b2e-c84a644724e0"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Gatherer_PullWarden"",
                    ""type"": ""Button"",
                    ""id"": ""f0a2f88e-6b67-4639-a7e4-04a08146c32c"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Gatherer_PickUp"",
                    ""type"": ""Button"",
                    ""id"": ""822e5f86-0676-4fec-8086-d8ef0b446200"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Warden_Move"",
                    ""type"": ""Value"",
                    ""id"": ""5493fa43-790c-4277-be7a-aac6ae8e7986"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Warden_Shoot"",
                    ""type"": ""Button"",
                    ""id"": ""4b249056-b9e0-4ceb-ae1d-90ed68f09168"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Warden_ActiveAbility"",
                    ""type"": ""Button"",
                    ""id"": ""c1877104-ca6d-4173-98bf-5296691c394f"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""fafdc6d2-6ca5-424f-ba34-ec78a41aa596"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Gatherer_Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""c0160dc9-b878-40c4-9814-f0d2b289a1a9"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Mouse and Keyboard"",
                    ""action"": ""Gatherer_Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""3601cd41-b45b-453f-8ec0-19c5dd566670"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Mouse and Keyboard"",
                    ""action"": ""Gatherer_Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""202a4e6e-c2ad-415c-8af6-7b93991322d0"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Mouse and Keyboard"",
                    ""action"": ""Gatherer_Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""e019745e-e7f3-409a-84ef-798b6e13653a"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Mouse and Keyboard"",
                    ""action"": ""Gatherer_Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Arrow Keys"",
                    ""id"": ""9b228058-1b31-404b-a3d5-f4db4af415e3"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Warden_Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""1204e23d-27a7-4a2f-8e9e-e2cafec3ed08"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Mouse and Keyboard"",
                    ""action"": ""Warden_Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""81518ea1-2aa1-4553-97df-19f0004bb0cf"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Mouse and Keyboard"",
                    ""action"": ""Warden_Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""cadf1162-7c24-45bc-90e0-f8d6c0c65793"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Mouse and Keyboard"",
                    ""action"": ""Warden_Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""dfe73931-6e0b-48e9-972a-0784e9ebe7f8"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Mouse and Keyboard"",
                    ""action"": ""Warden_Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""e87f8c3d-1462-445c-9c38-186ee22360d3"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Mouse and Keyboard"",
                    ""action"": ""Gatherer_PickUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b6fa62a5-0d88-4251-a32a-71091502ad47"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Mouse and Keyboard"",
                    ""action"": ""Gatherer_ActiveAbility"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0c16b67c-685f-44f8-b2ed-2dd6cd965ebc"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Mouse and Keyboard"",
                    ""action"": ""Gatherer_PullWarden"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c628fdc0-4b40-4e2d-b3b9-649074bcdd54"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Mouse and Keyboard"",
                    ""action"": ""Warden_Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d3e037ab-54cc-45a6-b934-937d9fd63e6b"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Mouse and Keyboard"",
                    ""action"": ""Warden_ActiveAbility"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Mouse and Keyboard"",
            ""bindingGroup"": ""Mouse and Keyboard"",
            ""devices"": [
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Gameplay
        m_Gameplay = asset.FindActionMap("Gameplay", throwIfNotFound: true);
        m_Gameplay_Gatherer_Move = m_Gameplay.FindAction("Gatherer_Move", throwIfNotFound: true);
        m_Gameplay_Gatherer_ActiveAbility = m_Gameplay.FindAction("Gatherer_ActiveAbility", throwIfNotFound: true);
        m_Gameplay_Gatherer_PullWarden = m_Gameplay.FindAction("Gatherer_PullWarden", throwIfNotFound: true);
        m_Gameplay_Gatherer_PickUp = m_Gameplay.FindAction("Gatherer_PickUp", throwIfNotFound: true);
        m_Gameplay_Warden_Move = m_Gameplay.FindAction("Warden_Move", throwIfNotFound: true);
        m_Gameplay_Warden_Shoot = m_Gameplay.FindAction("Warden_Shoot", throwIfNotFound: true);
        m_Gameplay_Warden_ActiveAbility = m_Gameplay.FindAction("Warden_ActiveAbility", throwIfNotFound: true);
    }

    ~@Controls()
    {
        UnityEngine.Debug.Assert(!m_Gameplay.enabled, "This will cause a leak and performance issues, Controls.Gameplay.Disable() has not been called.");
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Gameplay
    private readonly InputActionMap m_Gameplay;
    private List<IGameplayActions> m_GameplayActionsCallbackInterfaces = new List<IGameplayActions>();
    private readonly InputAction m_Gameplay_Gatherer_Move;
    private readonly InputAction m_Gameplay_Gatherer_ActiveAbility;
    private readonly InputAction m_Gameplay_Gatherer_PullWarden;
    private readonly InputAction m_Gameplay_Gatherer_PickUp;
    private readonly InputAction m_Gameplay_Warden_Move;
    private readonly InputAction m_Gameplay_Warden_Shoot;
    private readonly InputAction m_Gameplay_Warden_ActiveAbility;
    public struct GameplayActions
    {
        private @Controls m_Wrapper;
        public GameplayActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Gatherer_Move => m_Wrapper.m_Gameplay_Gatherer_Move;
        public InputAction @Gatherer_ActiveAbility => m_Wrapper.m_Gameplay_Gatherer_ActiveAbility;
        public InputAction @Gatherer_PullWarden => m_Wrapper.m_Gameplay_Gatherer_PullWarden;
        public InputAction @Gatherer_PickUp => m_Wrapper.m_Gameplay_Gatherer_PickUp;
        public InputAction @Warden_Move => m_Wrapper.m_Gameplay_Warden_Move;
        public InputAction @Warden_Shoot => m_Wrapper.m_Gameplay_Warden_Shoot;
        public InputAction @Warden_ActiveAbility => m_Wrapper.m_Gameplay_Warden_ActiveAbility;
        public InputActionMap Get() { return m_Wrapper.m_Gameplay; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GameplayActions set) { return set.Get(); }
        public void AddCallbacks(IGameplayActions instance)
        {
            if (instance == null || m_Wrapper.m_GameplayActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_GameplayActionsCallbackInterfaces.Add(instance);
            @Gatherer_Move.started += instance.OnGatherer_Move;
            @Gatherer_Move.performed += instance.OnGatherer_Move;
            @Gatherer_Move.canceled += instance.OnGatherer_Move;
            @Gatherer_ActiveAbility.started += instance.OnGatherer_ActiveAbility;
            @Gatherer_ActiveAbility.performed += instance.OnGatherer_ActiveAbility;
            @Gatherer_ActiveAbility.canceled += instance.OnGatherer_ActiveAbility;
            @Gatherer_PullWarden.started += instance.OnGatherer_PullWarden;
            @Gatherer_PullWarden.performed += instance.OnGatherer_PullWarden;
            @Gatherer_PullWarden.canceled += instance.OnGatherer_PullWarden;
            @Gatherer_PickUp.started += instance.OnGatherer_PickUp;
            @Gatherer_PickUp.performed += instance.OnGatherer_PickUp;
            @Gatherer_PickUp.canceled += instance.OnGatherer_PickUp;
            @Warden_Move.started += instance.OnWarden_Move;
            @Warden_Move.performed += instance.OnWarden_Move;
            @Warden_Move.canceled += instance.OnWarden_Move;
            @Warden_Shoot.started += instance.OnWarden_Shoot;
            @Warden_Shoot.performed += instance.OnWarden_Shoot;
            @Warden_Shoot.canceled += instance.OnWarden_Shoot;
            @Warden_ActiveAbility.started += instance.OnWarden_ActiveAbility;
            @Warden_ActiveAbility.performed += instance.OnWarden_ActiveAbility;
            @Warden_ActiveAbility.canceled += instance.OnWarden_ActiveAbility;
        }

        private void UnregisterCallbacks(IGameplayActions instance)
        {
            @Gatherer_Move.started -= instance.OnGatherer_Move;
            @Gatherer_Move.performed -= instance.OnGatherer_Move;
            @Gatherer_Move.canceled -= instance.OnGatherer_Move;
            @Gatherer_ActiveAbility.started -= instance.OnGatherer_ActiveAbility;
            @Gatherer_ActiveAbility.performed -= instance.OnGatherer_ActiveAbility;
            @Gatherer_ActiveAbility.canceled -= instance.OnGatherer_ActiveAbility;
            @Gatherer_PullWarden.started -= instance.OnGatherer_PullWarden;
            @Gatherer_PullWarden.performed -= instance.OnGatherer_PullWarden;
            @Gatherer_PullWarden.canceled -= instance.OnGatherer_PullWarden;
            @Gatherer_PickUp.started -= instance.OnGatherer_PickUp;
            @Gatherer_PickUp.performed -= instance.OnGatherer_PickUp;
            @Gatherer_PickUp.canceled -= instance.OnGatherer_PickUp;
            @Warden_Move.started -= instance.OnWarden_Move;
            @Warden_Move.performed -= instance.OnWarden_Move;
            @Warden_Move.canceled -= instance.OnWarden_Move;
            @Warden_Shoot.started -= instance.OnWarden_Shoot;
            @Warden_Shoot.performed -= instance.OnWarden_Shoot;
            @Warden_Shoot.canceled -= instance.OnWarden_Shoot;
            @Warden_ActiveAbility.started -= instance.OnWarden_ActiveAbility;
            @Warden_ActiveAbility.performed -= instance.OnWarden_ActiveAbility;
            @Warden_ActiveAbility.canceled -= instance.OnWarden_ActiveAbility;
        }

        public void RemoveCallbacks(IGameplayActions instance)
        {
            if (m_Wrapper.m_GameplayActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IGameplayActions instance)
        {
            foreach (var item in m_Wrapper.m_GameplayActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_GameplayActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public GameplayActions @Gameplay => new GameplayActions(this);
    private int m_MouseandKeyboardSchemeIndex = -1;
    public InputControlScheme MouseandKeyboardScheme
    {
        get
        {
            if (m_MouseandKeyboardSchemeIndex == -1) m_MouseandKeyboardSchemeIndex = asset.FindControlSchemeIndex("Mouse and Keyboard");
            return asset.controlSchemes[m_MouseandKeyboardSchemeIndex];
        }
    }
    public interface IGameplayActions
    {
        void OnGatherer_Move(InputAction.CallbackContext context);
        void OnGatherer_ActiveAbility(InputAction.CallbackContext context);
        void OnGatherer_PullWarden(InputAction.CallbackContext context);
        void OnGatherer_PickUp(InputAction.CallbackContext context);
        void OnWarden_Move(InputAction.CallbackContext context);
        void OnWarden_Shoot(InputAction.CallbackContext context);
        void OnWarden_ActiveAbility(InputAction.CallbackContext context);
    }
}
